@page "/Details/{AvId:int}"
@page "/Details/{AvId:int}/{PersonVersionId:int}"
@using AV.AvA.BlazorWasmClient.Services
@using AV.AvA.Model
@layout AuthedLayout
@inject IPersonVersionAccessor pva

@if (_pv != null)
{
    <PersonDetail PersonVersion="_pv" Beziehungen="_beziehungen" />
}
else
{
    @:Laden...
}

@code {
    [Parameter]
    public int AvId { get; set; }

    [Parameter]
    public int? PersonVersionId { get; set; }

    private PersonVersion? _pv;
    private Dictionary<int, PersonVersion?> _beziehungen = new();

    protected override async Task OnParametersSetAsync()
    {
        if (PersonVersionId.HasValue)
        {
            var versions = await pva.GetAllByAvIdAsync(AvId);
            _pv = versions.First(pv => pv.PersonVersionId == PersonVersionId.Value);
        }
        else
        {
            _pv = await pva.GetCurrentByAvIdAsync(AvId);
        }

        _beziehungen = new Dictionary<int, PersonVersion?>();
        foreach (var bez in _pv.Person.Beziehungen)
        {
            if (bez.AvId.HasValue && !_beziehungen.ContainsKey(bez.AvId.Value))
            {
                _beziehungen[bez.AvId.Value] = await pva.GetCurrentByAvIdAsync(bez.AvId.Value);
            }
        }
    }

}
