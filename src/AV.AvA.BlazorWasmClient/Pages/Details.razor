@page "/Details/{AvId:int}"
@using AV.AvA.BlazorWasmClient.Services
@using AV.AvA.Model
@using NodaTime
@using NodaTime.Text
@using NodaTime.TimeZones
@layout AuthedLayout
@inject IPersonVersionAccessor pva

@if (_pv != null)
{
    <PersonDetail PersonVersion="_pv"/>
}
else
{
    @:Laden...
}

@code {
    [Parameter]
	public int AvId { get; set; }

	private PersonVersion? _pv;

	protected override async Task OnParametersSetAsync()
	{
        _pv = await pva.GetCurrentByAvIdAsync(AvId);
    }

    public PersonVersion pv = new PersonVersion()
    {
        AvId = 12345,
        ComitterAvId = 0,
        CommitMessage = "WHUP DUP DUBIIIDOOO",
        CommittedAt = InstantPattern.General.Parse("2021-10-02T11:22:33Z").GetValueOrThrow(),
        PersonVersionId = 5,
        Software = "AVA Migrator -5.3.42",
        Person = new Person
        {
            Debitorennummer = 99099,
            Geburtsdatum = LocalDatePattern.Iso.Parse("2003-02-01").GetValueOrThrow(),
            Geburtsort = "Krankenhausstadt",
            Geschlecht = Geschlecht.Maennlich,
            Vorname = "Spaß",
            PraefixTitel = "Dr.",
            NachnamePraefix = "von",
            SuffixTitel = "PhD",
            Zweitnamen = "Freude",
            Spitznamen = new List<string>
            {
                "Bremse",
            },
            Mobilnummern = new List<Mobilnummer>
            {
                new Mobilnummer
                {
                    Nummer = "+19 1252 222222",
                    Typ = AdressTyp.Primaer
                }
            },
            Nachname = "Vogel",
            Messenger = new List<Messenger>
            {
                new Messenger
                {
                    Name = "spassvogel",
                    Typ = MessengerTyp.Skype,
                }
            },
            Arbeitgeber = new List<Arbeitgeber>
            {
                new Arbeitgeber
                {
                    Abteilung = "Spaßabteilung",
                    Position = "Bällebadbeauftragter",
                    Adresse = new Adresse
                    {
                        Strasse = "Unlustige Straße 1",
                        Land = "DE",
                        PLZ = "12346",
                        Ort = "Arbeitsstadt",
                        Typ = AdressTyp.Geschaeftlich,
                    }
                }
            },
            Adressen = new List<Adresse>
            {
                new Adresse
                {
                    Flags = new List<AdressFlag>
                    {
                        AdressFlag.Mitteilungsblatt
                    },
                    Land = "DE",
                    Ort = "Weltstadt",
                    PLZ = "12345",
                    Strasse = "Traumstraße 75",
                    Telefon = "+49 12345 7589",
                    Typ = AdressTyp.Eltern,
                    GueltigVon = new ZonedDateTime(InstantPattern.General.Parse("2003-02-01T00:00:00Z").GetValueOrThrow(), DateTimeZoneProviders.Tzdb["Europe/Berlin"]),
                    GueltigBis = new ZonedDateTime(InstantPattern.General.Parse("2020-02-01T00:00:00Z").GetValueOrThrow(), DateTimeZoneProviders.Tzdb["Europe/Berlin"]),
                },
                new Adresse
                {
                    Flags = new List<AdressFlag>
                    {
                        AdressFlag.Veranstaltungseinladung, AdressFlag.Vereinsangelegenheit
                    },
                    Land = "DE",
                    Ort = "Kleinstadt",
                    PLZ = "67890",
                    Strasse = "Gustav Gemütlich Straße 1258A",
                    Telefon = "+49 67890 741584",
                    Typ = AdressTyp.Studien
                }
            },
            Emails = new List<Email>
            {
                new Email
                {
                    Adresse = "spass@vogel.de",
                    Flags = new List<EmailFlag>
                    {
                        EmailFlag.VerteilerAktivitas, EmailFlag.Einladung, EmailFlag.Vereinsangelegenheiten, EmailFlag.Mitteilungsblatt
                    }
                }
            },
        }
    };
}
