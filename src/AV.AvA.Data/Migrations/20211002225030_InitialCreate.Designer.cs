// <auto-generated />
using System;
using AV.AvA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AV.AvA.Data.Migrations
{
    [DbContext(typeof(AvADbContext))]
    [Migration("20211002225030_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-rc.1.21452.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AV.AvA.StorageModel.LoginToken", b =>
                {
                    b.Property<int>("LoginTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("login_token_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoginTokenId"));

                    b.Property<int>("AvId")
                        .HasColumnType("integer")
                        .HasColumnName("av_id");

                    b.Property<Instant>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<Instant?>("UsedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("used_at");

                    b.Property<Instant?>("ValidUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("valid_until");

                    b.HasKey("LoginTokenId")
                        .HasName("pk_login_tokens");

                    b.HasIndex("AvId")
                        .IsUnique()
                        .HasDatabaseName("ix_login_tokens_av_id")
                        .HasFilter("valid_until IS NOT NULL AND used_at IS NOT NULL");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("ix_login_tokens_token");

                    b.ToTable("login_tokens", (string)null);
                });

            modelBuilder.Entity("AV.AvA.StorageModel.PersonVersion", b =>
                {
                    b.Property<int>("PersonVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("person_version_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonVersionId"));

                    b.Property<int>("AvId")
                        .HasColumnType("integer")
                        .HasColumnName("av_id");

                    b.Property<int?>("ComitterAvId")
                        .HasColumnType("integer")
                        .HasColumnName("comitter_av_id");

                    b.Property<string>("CommitMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("commit_message");

                    b.Property<Instant>("CommittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("committed_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Person")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("person");

                    b.Property<string>("Software")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("software");

                    b.HasKey("PersonVersionId")
                        .HasName("pk_person_versions");

                    b.HasIndex("AvId")
                        .HasDatabaseName("ix_person_versions_av_id");

                    b.ToTable("person_versions", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
